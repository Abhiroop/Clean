.comp 920 0101110100100
.start _nostart_
.depend "filesystem"
.depend "ipc"
.depend "ArgEnv"
.depend "StdDebug"
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.depend "CoclSystemDependent"
.impobj "cDirectory.o"
.impobj "ipc_c.o"
.endinfo
.module m_CoclSystemDependent "CoclSystemDependent"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod filesystem
.implab e_filesystem_sensureDirectoryExists
.impmod ipc
.implab e_ipc_sopen_pipes
.implab e_ipc_sget_command_length
.implab e_ipc_sget_command
.implab e_ipc_ssend_result
.impmod ArgEnv
.implab e_ArgEnv_sgetCommandLine
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdList
.implab e_StdList_s!!
.implab e_StdList_stl
.implab e_StdList_slength;47
.impmod StdFile
.impdesc e_StdFile_dfclose;26
.impdesc e_StdFile_dfopen;27
.impdesc e_StdFile_dsfopen;28
.impdesc e_StdFile_dstdio;29
.impdesc e_StdFile_rFileSystem;
.impmod StdString
.implab e_StdString_s==;2
.implab e_StdString_s%;10
.impmod _SystemArray
.impmod StdChar
.implab e_StdChar_s==;18
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s==;16
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.export e_CoclSystemDependent_scompiler_loop
.descexp e_CoclSystemDependent_dcompiler_loop e_CoclSystemDependent_ncompiler_loop e_CoclSystemDependent_lcompiler_loop 2 0 "compiler_loop"
.a 0 a5
.o 2 0
e_CoclSystemDependent_lcompiler_loop
	repl_args 1 1
.o 2 0
a5
.d 2 0
	jsr ea5
.o 1 1 b
	push_a 0
	buildB_b 0
	buildh _Tuple 2
	updatepop_a 0 1
	pop_b 1
.d 1 0
	rtn
.n 2 e_CoclSystemDependent_dcompiler_loop
.o 1 0
e_CoclSystemDependent_ncompiler_loop
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea5
.o 1 1 b
	push_a 0
	buildB_b 0
	fillh _Tuple 2 3
	pop_a 1
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea5
.o 2 0
e_CoclSystemDependent_scompiler_loop
.o 2 0
s5
.d 0 0
	jsr e_ArgEnv_sgetCommandLine
.o 1 0
	push_a 0
	push_arraysize _ 1 0
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s21
.o 1 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr e_StdList_stl
.o 1 0
	push_a 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 3
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	jmp_false else.1
	pushI 0
	push_a 0
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	buildAC "--pipe"
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr eqAC
.o 0 1 b	
	jmp_false else.1
	pushI 2
	push_a 0
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	pushI 1
	push_a 1
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	push_array 0
	updatepop_a 0 1
	push_a 4
	push_a 4
	push_a 3
	update_a 2 4
	update_a 3 2
	update_a 0 3
	pop_a 1
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 4 0
	jsr s7
.o 1 0
	pushB TRUE
.d 1 1 b
	rtn
else.1
	push_a 2
	push_a 2
	jsr_eval 0
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	push_arg 0 2 2
	jsr_eval 0
	push_arg 1 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	updatepop_a 0 1
.d 1 1 b
	rtn
.o 2 2 ii
s21
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.3
	push_b 0
	push_array 0
	updatepop_a 0 1
	push_a 0
	select _ 1 0
	push_a 1
	buildh ARRAY 1
	push_a 0
	push_b 1
	push_b 1
	build_u _ 1 2 n32
	push_a 2
	fillh _Cons 2 5
	pop_a 3
	pop_b 2
.d 1 0
	rtn
else.3
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n32
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea32
.o 2 2 ii
s32
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s21
.o 4 0
s7
	push_a 2
	push_a 2
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jsr e_ipc_sopen_pipes
.o 0 1 i
	pushI 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	notB
	jmp_false else.4
	buildAC "compile_loop\n"
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
.d 1 0
	rtn
else.4
	push_a 1
	push_a 1
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp s8
.o 2 0
s8
.d 0 0
	jsr e_ipc_sget_command_length
.o 0 1 i
	pushI -1
	push_b 1
	eqI
	jmp_false else.5
	buildAC "compile_files 1"
	updatepop_a 0 2
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
.d 1 0
	rtn
else.5
	pushC '\000'
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	create_array CHAR 0 1
	push_a 0
.d 1 0
	jsr e_ipc_sget_command
.o 0 1 i
	pushI 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	notB
	jmp_false else.6
	buildAC "compile_files 2 "
	updatepop_a 0 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
.d 1 0
	rtn
else.6
	push_a 0
	push_arraysize CHAR 0 1
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 0
	push_a 0
	updatepop_a 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr s16
.o 1 0
	push_a 2
	push_a 2
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jmp s23
.o 3 0
s23
	eq_desc _Cons 2 0
	jmp_true case.7
	jmp case.8
case.7
	repl_args 2 2
	jsr_eval 0
	push_array 0
	eqAC_a "cocl"
	jmp_true case.9
	push_array 0
	eqAC_a "quit"
	jmp_true case.10
	pop_a 1
	jmp case.8
case.9
	push_a 3
	push_a 3
	jsr_eval 0
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 5 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	jsr_ap 2
	push_arg 0 2 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
.d 0 1 b
	jsr s22
.o 0 1 i
.d 0 1 i
	jsr e_ipc_ssend_result
.o 0 1 i
	pushI 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	notB
	jmp_false else.11
	buildAC "compile_files 3"
	updatepop_a 0 2
.d 1 0
	jsr print_string_
.o 0 0
	halt
.d 1 0
	rtn
else.11
	push_arg 0 2 2
	push_a 2
	update_a 1 3
	updatepop_a 0 2
.d 2 0
	jmp s8
case.10
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.12
	pop_a 1
	jmp case.8
case.12
	pop_a 3
	jmp_eval
case.8
	buildAC "compile_files 4"
	updatepop_a 0 3
.d 1 0
	jsr print_string_
.o 0 0
	halt
.d 1 0
	rtn
.o 0 1 b
s22
	eqB_b TRUE 0
	jmp_true case.13
	jmp case.14
case.13
	pop_b 1
	pushI 0
.d 0 1 i
	rtn
case.14
	pop_b 1
	pushI -1
.d 0 1 i
	rtn
.o 2 0
s16
	push_a 0
	push_arraysize CHAR 0 1
	pushI 0
	push_a 0
	buildh ARRAY 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
.d 2 2 ii
	jmp s17
.o 2 2 ii
s17
	push_b 1
	push_b 1
	push_a 0
.d 1 2 ii
	jsr s18
.o 0 1 i
	push_b 1
	push_b 1
	eqI
	jmp_false else.15
	fillh _Nil 0 1
	pop_a 1
	pop_b 3
.d 1 0
	rtn
else.15
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	select CHAR 0 1
	pushC '"'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.16
	pushI 1
	push_b 1
	addI
	push_b 2
	push_a 0
.d 1 2 ii
	jsr s19
.o 0 1 i
	push_b 2
	push_b 1
	ltI
	notB
	jmp_false else.17
	buildh _Nil 0
	push_b 2
	push_b 2
	push_a 1
	build_u _ 1 2 n26
	fillh _Cons 2 3
	pop_a 1
	pop_b 4
.d 1 0
	rtn
else.17
	push_b 0
	push_b 3
	push_a 0
	build_u _ 1 2 n28
	push_b 0
	push_b 2
	push_a 1
	build_u _ 1 2 n27
	fillh _Cons 2 3
	pop_a 1
	pop_b 4
.d 1 0
	rtn
else.16
	pushI 1
	push_b 1
	addI
	push_b 2
	push_a 0
.d 1 2 ii
	jsr s20
.o 0 1 i
	push_b 2
	push_b 1
	ltI
	notB
	jmp_false else.18
	buildh _Nil 0
	push_b 2
	push_b 2
	push_a 1
	build_u _ 1 2 n29
	fillh _Cons 2 3
	pop_a 1
	pop_b 4
.d 1 0
	rtn
else.18
	push_b 0
	push_b 3
	push_a 0
	build_u _ 1 2 n31
	push_b 0
	push_b 2
	push_a 1
	build_u _ 1 2 n30
	fillh _Cons 2 3
	pop_a 1
	pop_b 4
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n31
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea31
.o 2 2 ii
s31
	pushI 1
	push_b 2
	addI
	push_b 1
	push_a 0
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s17
.nu 1 2 _ _
.o 1 0
n30
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea30
.o 2 2 ii
s30
	pushI 1
	push_b 2
	subI
	push_b 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 ii
	jsr sliceAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n29
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea29
.o 2 2 ii
s29
	pushI 1
	push_b 2
	subI
	push_b 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 ii
	jsr sliceAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n28
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea28
.o 2 2 ii
s28
	pushI 1
	push_b 2
	addI
	push_b 1
	push_a 0
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s17
.nu 1 2 _ _
.o 1 0
n27
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea27
.o 2 2 ii
s27
	pushI 1
	push_b 2
	subI
	pushI 1
	push_b 2
	addI
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 ii
	jsr sliceAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n26
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea26
.o 2 2 ii
s26
	pushI 1
	push_b 2
	subI
	push_b 1
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 ii
	jsr sliceAC
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 1 2 ii
s20
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.19
	update_b 0 1
	pop_a 1
	pop_b 1
.d 0 1 i
	rtn
else.19
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 1
	select CHAR 0 1
	pushC ' '
	push_b 1
	eqC
	jmp_true then.20
	pushC '\t'
	push_b 1
	eqC
	jmp_false else.20
then.20
	pop_a 1
	pop_b 2
.d 0 1 i
	rtn
else.20
	pushI 1
	push_b 3
	addI
	push_b 2
	push_a 0
	updatepop_a 0 1
	update_b 1 4
	updatepop_b 0 3
.d 1 2 ii
	jmp s20
.o 1 2 ii
s19
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.22
	update_b 0 1
	pop_a 1
	pop_b 1
.d 0 1 i
	rtn
else.22
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 1
	select CHAR 0 1
	pushC '"'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.23
	pop_a 1
	pop_b 1
.d 0 1 i
	rtn
else.23
	pushI 1
	push_b 2
	addI
	push_b 1
	push_a 0
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 ii
	jmp s19
.o 1 2 ii
s18
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.24
	update_b 0 1
	pop_a 1
	pop_b 1
.d 0 1 i
	rtn
else.24
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 1
	select CHAR 0 1
	pushC ' '
	push_b 1
	eqC
	jmp_true then.25
	pushC '\t'
	push_b 1
	eqC
	jmp_false else.25
then.25
	pushI 1
	push_b 3
	addI
	push_b 2
	push_a 0
	updatepop_a 0 1
	update_b 1 4
	updatepop_b 0 3
.d 1 2 ii
	jmp s18
else.25
	pop_a 1
	pop_b 2
.d 0 1 i
	rtn
.export e_CoclSystemDependent_sset_compiler_id
.descexp e_CoclSystemDependent_dset_compiler_id e_CoclSystemDependent_nset_compiler_id e_CoclSystemDependent_lset_compiler_id 1 0 "set_compiler_id"
.o 2 0
e_CoclSystemDependent_lset_compiler_id
	pop_a 1
.d 1 0
	jsr ea4
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.n 1 e_CoclSystemDependent_dset_compiler_id
.o 1 0
e_CoclSystemDependent_nset_compiler_id
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea4
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
e_CoclSystemDependent_sset_compiler_id
.o 1 0
ea4
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
s4
.d 0 1 i
	rtn
.export e_CoclSystemDependent_sensureCleanSystemFilesExists
.descexp e_CoclSystemDependent_densureCleanSystemFilesExists e_CoclSystemDependent_nensureCleanSystemFilesExists e_CoclSystemDependent_lensureCleanSystemFilesExists 2 0 "ensureCleanSystemFilesExists"
.a 0 a3
.o 2 0
e_CoclSystemDependent_lensureCleanSystemFilesExists
	repl_args 1 1
.o 2 0
a3
.d 2 0
	jsr ea3
.o 1 1 b
	push_a 0
	buildB_b 0
	buildh _Tuple 2
	updatepop_a 0 1
	pop_b 1
.d 1 0
	rtn
.n 2 e_CoclSystemDependent_densureCleanSystemFilesExists
.o 1 0
e_CoclSystemDependent_nensureCleanSystemFilesExists
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea3
.o 1 1 b
	push_a 0
	buildB_b 0
	fillh _Tuple 2 3
	pop_a 1
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea3
	jsr_eval 1
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
.o 2 0
e_CoclSystemDependent_sensureCleanSystemFilesExists
.o 2 0
s3
	buildh e_StdFile_dstdio;29 0
	buildh e_StdFile_dsfopen;28 0
	buildh e_StdFile_dfopen;27 0
	buildh e_StdFile_dfclose;26 0
	push_a 5
	push_a 5
	push_a 5
	update_a 2 6
	update_a 4 2
	update_a 0 4
	update_a 5 0
	update_a 1 5
	update_a 3 1
	update_a 0 3
	pop_a 1
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 6 0
	jmp e_filesystem_sensureDirectoryExists
.export e_CoclSystemDependent_sSystemDependentInitialIO
.export e_CoclSystemDependent_eaSystemDependentInitialIO
.descexp e_CoclSystemDependent_dSystemDependentInitialIO e_CoclSystemDependent_nSystemDependentInitialIO e_CoclSystemDependent_lSystemDependentInitialIO 0 0 "SystemDependentInitialIO"
.o 1 0
e_CoclSystemDependent_lSystemDependentInitialIO
	halt
.n 0 e_CoclSystemDependent_dSystemDependentInitialIO e_CoclSystemDependent_eaSystemDependentInitialIO
.o 1 0
e_CoclSystemDependent_nSystemDependentInitialIO
	push_node _cycle_in_spine 0
.o 1 0
e_CoclSystemDependent_eaSystemDependentInitialIO
.o 1 0
e_CoclSystemDependent_sSystemDependentInitialIO
.o 1 0
s2
	fillh _Nil 0 0
.d 1 0
	rtn
.export e_CoclSystemDependent_sSystemDependentDevices
.export e_CoclSystemDependent_eaSystemDependentDevices
.descexp e_CoclSystemDependent_dSystemDependentDevices e_CoclSystemDependent_nSystemDependentDevices e_CoclSystemDependent_lSystemDependentDevices 0 0 "SystemDependentDevices"
.o 1 0
e_CoclSystemDependent_lSystemDependentDevices
	halt
.n 0 e_CoclSystemDependent_dSystemDependentDevices e_CoclSystemDependent_eaSystemDependentDevices
.o 1 0
e_CoclSystemDependent_nSystemDependentDevices
	push_node _cycle_in_spine 0
.o 1 0
e_CoclSystemDependent_eaSystemDependentDevices
.o 1 0
e_CoclSystemDependent_sSystemDependentDevices
.o 1 0
s1
	fillh _Nil 0 0
.d 1 0
	rtn
