.comp 920 0101110100100
.start _nostart_
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.depend "ArgEnv"
.impobj "ArgEnvC.o"
.endinfo
.module m_ArgEnv "ArgEnv"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdString
.implab e_StdString_s+++;11
.impmod _SystemArray
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s==;16
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.export e_ArgEnv_eaEnvironmentVariable
.descexp e_ArgEnv_dEnvironmentVariable e_ArgEnv_nEnvironmentVariable e_ArgEnv_lEnvironmentVariable 1 0 "EnvironmentVariable"
.o 2 0
e_ArgEnv_lEnvironmentVariable
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_ArgEnv_eaEnvironmentVariable
.n 1 e_ArgEnv_dEnvironmentVariable e_ArgEnv_eaEnvironmentVariable
.o 1 0
e_ArgEnv_nEnvironmentVariable
	push_node _cycle_in_spine 1
.o 2 0
e_ArgEnv_eaEnvironmentVariable
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
	fill_r e_ArgEnv_kEnvironmentVariable 1 0 1 0 0
	pop_a 1
.d 1 0
	rtn
.export e_ArgEnv_dEnvironmentVariableUndefined
.desc e_ArgEnv_dEnvironmentVariableUndefined _hnf _hnf 0 0 "EnvironmentVariableUndefined"
.export e_ArgEnv_kEnvironmentVariable
.record e_ArgEnv_kEnvironmentVariable da 1 0 "EnvironmentVariable"
.export e_ArgEnv_sgetCommandLine
.descexp e_ArgEnv_dgetCommandLine e_ArgEnv_ngetCommandLine e_ArgEnv_lgetCommandLine 0 0 "getCommandLine"
.o 1 0
e_ArgEnv_lgetCommandLine
	halt
.n 0 e_ArgEnv_dgetCommandLine
.o 1 0
e_ArgEnv_ngetCommandLine
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea2
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 0 0
ea2
.o 0 0
e_ArgEnv_sgetCommandLine
.o 0 0
s2
	ccall ArgEnvGetCommandLineCountC "-I"

	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	subI
	pushI 1
	push_b 1
	addI
	create_array_ _ 1 0
	push_b 0
	pushI 0
	update_b 1 2
	updatepop_b 0 1
.d 1 2 ii
	jmp s13
.o 1 2 ii
s13
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.1
	pushI 1
	push_b 1
	addI
	push_b 1
	build_u _ 0 1 n11
	push_b 1
	push_a 1
	update_a 1 2
	updatepop_a 0 1
	update _ 1 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 ii
	jmp s13
else.1
	pop_b 2
.d 1 0
	rtn
.o 0 0
s7
.inline getCommandLineCount
	ccall ArgEnvGetCommandLineCountC "-I"
.end

.d 0 1 i
	rtn
.nu 0 1 _
.o 1 0
n11
	push_node_u _cycle_in_spine 0 1
.d 0 1 i
	jsr ea11
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 0 1 i
ea11
.o 0 1 i
s11
	push_b 0
	updatepop_b 0 1
.d 0 1 i
	jsr s8
.o 0 2 ii
	push_b 1
	push_b 1
	update_b 1 3
	updatepop_b 0 2
	create_array_	CHAR 0 1
	push_a	0
	ccall	ArgEnvCopyCStringToCleanStringC "pS-I"
	pop_b	1

.d 1 0
	rtn
.o 0 1 i
s8
	push_b 0
	updatepop_b 0 1
	ccall ArgEnvGetCommandLineArgumentC "I-pp"

.d 0 2 ii
	rtn
.o 0 1 i
s9
.inline getCommandLineArgument64
	ccall ArgEnvGetCommandLineArgumentC "I-pp"
.end

.d 0 2 ii
	rtn
.export e_ArgEnv_sgetEnvironmentVariable
.export e_ArgEnv_eagetEnvironmentVariable
.descexp e_ArgEnv_dgetEnvironmentVariable e_ArgEnv_ngetEnvironmentVariable e_ArgEnv_lgetEnvironmentVariable 1 0 "getEnvironmentVariable"
.o 2 0
e_ArgEnv_lgetEnvironmentVariable
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_ArgEnv_eagetEnvironmentVariable
.n 1 e_ArgEnv_dgetEnvironmentVariable e_ArgEnv_eagetEnvironmentVariable
.o 1 0
e_ArgEnv_ngetEnvironmentVariable
	push_node _cycle_in_spine 1
.o 2 0
e_ArgEnv_eagetEnvironmentVariable
	jsr_eval 0
	push_array 0
	update_a 0 1
	pop_a 1
.o 2 0
e_ArgEnv_sgetEnvironmentVariable
.o 2 0
s1
	buildAC "\000"
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
	ccall ArgEnvGetEnvironmentVariableC "S-pp"

	pushI 0
	push_b 2
	eqI
	jmp_false else.2
	fillh e_ArgEnv_dEnvironmentVariableUndefined 0 0
	pop_b 2
.d 1 0
	rtn
else.2
	push_b 1
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	create_array_	CHAR 0 1
	push_a	0
	ccall	ArgEnvCopyCStringToCleanStringC "pS-I"
	pop_b	1

	fill_r e_ArgEnv_kEnvironmentVariable 1 0 1 0 0
	pop_a 1
	pop_b 1
.d 1 0
	rtn
.o 1 0
s3
.inline getEnv64
	ccall ArgEnvGetEnvironmentVariableC "S-pp"
.end

.d 0 2 ii
	rtn
.o 0 2 ii
s5
.inline copy64
	create_array_	CHAR 0 1
	push_a	0
	ccall	ArgEnvCopyCStringToCleanStringC "pS-I"
	pop_b	1
.end

.d 1 0
	rtn
